/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}:root{--accent-light: #65a30d;--accent-dark: #365314;--bg-light: #f1f5f9;--bg-error: #fecaca;--card-width: 14rem;--card-margin: 0.5rem;--card-default: #fb923c;--card-on: #65a30d;--card-off: #888;--color-light: #f1f5f9;--color-error: #b91c1c;--scroll-light: #f5f5f5;--scroll-dark: #d4d4d4}html{font-size:62.5%}html,body{min-height:100vh;min-height:-webkit-fill-available;max-width:100%}html{box-sizing:border-box}*,*:before,*:after{box-sizing:inherit}body{font:400 1.4rem/1.2 "Manrope",Tahoma,Verdana,sans-serif}.action{position:fixed;bottom:1rem;right:1rem;display:flex;cursor:pointer}.action--active .action__search{display:block}.action--active .action__item--search{opacity:1}.action__item{width:4rem;height:4rem;background:no-repeat center center/2.2rem var(--accent-dark);margin:0 .2rem;position:relative;opacity:.5;transition:opacity .25s linear}.action__item:hover{opacity:1}.action__item--search{background-image:url("./images/icons/icon-photo-search.svg")}.action__item--scroll{background-image:url("./images/icons/icon-chevron-up.svg")}.action__search{display:none;border:.4rem solid var(--accent-light);width:15rem;padding:0 1rem;margin-right:-0.2rem;text-align:center}.action__search:focus,.action__search:focus-visible{outline:none}.button{flex:0 0 calc(50% - .5rem);display:flex;align-items:center;border:2px solid var(--accent-dark);background-color:var(--accent-light);color:var(--accent-dark);padding:1rem;border-radius:.3rem;cursor:pointer;transition:all .25s linear;padding-left:4.3rem;border-radius:.5rem}.button:hover{text-decoration:underline}.button--filter{background:url("./images/icons/icon-filter-cancel.svg") 1rem center no-repeat}.button--cards{background:url("./images/icons/icon-settings-cancel.svg") 1rem center no-repeat}.card{flex:1 1 var(--card-width);max-width:var(--card-width);height:auto;aspect-ratio:.7;margin:var(--card-margin);border:4px solid var(--card-default);border-radius:1rem;background-color:var(--bg-light);position:relative;overflow:hidden;transition:all .1s ease-in-out;cursor:pointer}@media(hover: hover)and (pointer: fine){.card:hover{transform:scale(1.05)}}@media(min-width: 480px){.card{--card-width: 18rem;--card-margin: 1rem}}@media(min-width: 768px){.card{--card-width: 20rem}}@media(min-width: 1024px){.card{--card-width: 17rem}}@media(min-width: 1280px){.card{--card-width: 18.5rem}}@media(min-width: 1440px){.card{--card-width: 20rem}}.card__image{-o-object-fit:cover;object-fit:cover;width:100%;height:100%}.card--on,.card--off{position:relative}.card--on::after,.card--off::after{content:none;position:absolute;bottom:.2rem;left:.2rem;display:block;width:3rem;height:3rem;border-radius:.5rem;background-position:center center;background-size:70% 70%;background-repeat:no-repeat}.card--on .card__image,.card--off .card__image{opacity:.5}.card--on{border-color:var(--card-on)}.card--on::after{content:"";background-color:var(--card-on);background-image:url("./images/icons/icon-check.svg")}.card--on .card__image{filter:grayscale(100%) brightness(75%) sepia(200%) hue-rotate(50deg) saturate(200%)}.card--on .card__id{background-color:var(--card-on)}.card--off{border-color:var(--card-off)}.card--off::after{content:"";background-color:var(--card-off);background-image:url("./images/icons/icon-ban.svg")}.card--off .card__image{filter:grayscale(100%)}.card--off .card__id{background-color:var(--card-off)}.card__id{display:inline-flex;padding:.3rem .5rem;background-color:var(--card-default);color:var(--color-light);position:absolute;right:0;bottom:34%;font-weight:700}.container{display:flex;min-height:100vh;max-width:100%}.container__outer--sidebar{position:relative}.container__outer--content{flex:1}.container__inner--sidebar{max-height:100vh;height:100%;width:100%;overflow-y:auto;max-width:40rem;background-color:var(--accent-light);padding:2rem;display:flex;flex-direction:column}.content{flex:1;height:100%;scrollbar-width:1rem;scrollbar-color:var(--scroll-dark) var(--scroll-light)}.content ::-webkit-scrollbar{width:1rem}.content ::-webkit-scrollbar-track{background:var(--scroll-light)}.content ::-webkit-scrollbar-thumb{background-color:var(--scroll-dark)}.content__navbar{display:flex;height:6rem;justify-content:space-between;align-items:center}.content__area{max-height:calc(100vh - 6rem);overflow-y:auto;display:flex;flex-wrap:wrap;width:100%;padding:2rem 1rem 0;justify-content:center}.content__empty{background-color:var(--bg-error);color:var(--color-error);padding:1rem 3rem;border-radius:1rem}.filter{flex:1 0 auto}.filter__category{display:flex;flex-wrap:wrap;border:2px solid var(--accent-dark);padding:1rem;margin-bottom:1rem;border-radius:1rem}.filter__category--hide{display:none}.filter__category--size .filter__item:nth-child(-n+6){margin-bottom:0}.filter__type{background-color:var(--accent-dark);color:var(--color-light);padding:.3rem 1rem;font-weight:400;border-radius:.5rem}.filter__item{display:block;width:5rem;height:5rem;position:relative;margin:.8rem .5rem}.filter__item:nth-child(n+7){margin-top:1rem}@media(min-width: 480px){.filter__item{margin:.5rem .7rem}}@media(min-width: 1024px){.filter__item{margin-bottom:3.5rem}}@media(min-width: 1024px){.filter__item--no-label{margin-bottom:.7rem}}.filter__item--full{width:100%;height:.1rem;border-bottom:1px solid var(--accent-dark);margin:2rem 0 1rem;display:none}.filter__item--separator::after{content:"";display:block;background-color:var(--accent-dark);position:absolute;top:0;left:50%;width:.1rem;height:100%}.filter__checkbox{height:0;width:0;visibility:hidden;position:absolute}.filter__checkbox:checked+.filter__label{filter:grayscale(0);opacity:1}.filter__checkbox:checked+.filter__label::before{border-color:var(--accent-dark)}.filter__checkbox:checked+.filter__label::after{content:"";position:absolute;right:.1rem;bottom:.1rem;width:.9rem;height:.9rem;background-color:var(--accent-dark)}.filter__label{display:block;width:100%;height:100%;z-index:99;filter:grayscale(100%);opacity:.5;transition:all .25s linear}.filter__label:hover{cursor:pointer;filter:grayscale(0%);opacity:1}.filter__label::before{content:"";position:absolute;bottom:-0.3rem;right:-0.3rem;width:1.7rem;height:1.7rem;background-color:var(--bg-light);border:2px solid var(--accent-dark)}.filter__label--hide .filter__text{display:none}.filter__text{display:none;position:absolute;top:calc(100% + 1rem);left:50%;transform:translateX(-50%);background-color:var(--accent-dark);color:var(--color-light);padding:.3rem .5rem;font-size:1.3rem}@media(min-width: 1024px){.filter__text{display:block}}.filter__buttons{display:flex;flex-wrap:wrap;gap:1rem}.icon{background:url("./images/general/sprites.webp") no-repeat;background-size:100% 2500%;background-position-x:0;border-radius:50%}.icon--africa{background-position-y:8.34%}.icon--europe{background-position-y:4.17%}.icon--asia{background-position-y:12.51%}.icon--americas{background-position-y:20.85%}.icon--australia{background-position-y:16.68%}.icon--bird{background-position-y:25.02%}.icon--predator{background-position-y:29.19%}.icon--herbivore{background-position-y:33.36%}.icon--reptile{background-position-y:37.53%}.icon--primate{background-position-y:41.7%}.icon--bear{background-position-y:83.4%}.icon--pet{background-position-y:79.23%}.icon--1{background-position-y:54.21%}.icon--2{background-position-y:62.55%}.icon--3{background-position-y:58.38%}.icon--4{background-position-y:50.04%}.icon--5{background-position-y:45.87%}.icon--small{background-position-y:70.89%}.icon--aviary{background-position-y:75.06%}.icon--terrarium{background-position-y:66.72%}.icon--rock{background-position-y:87.57%}.icon--water{background-position-y:91.74%}.icon--conservation{background-position-y:95.91%}.icon--reputation{background-position-y:100.08%}.information{margin-top:auto;margin:-2rem;margin-top:2rem;padding:1.5rem 2rem;border-top:1px dashed var(--accent-dark)}.information__item{display:flex;align-items:center}.information__icon{margin-right:1rem;width:2rem}.information__link{color:var(--accent-dark);text-decoration:none;letter-spacing:-0.5px}.nav{flex:0 0 100vw;margin-left:-100%;scrollbar-width:1rem;scrollbar-color:var(--accent-dark) var(--accent-light)}.nav ::-webkit-scrollbar{width:1rem}.nav ::-webkit-scrollbar-track{background:var(--accent-light)}.nav ::-webkit-scrollbar-thumb{background-color:var(--accent-dark)}@media(min-width: 1024px){.nav{flex:0 0 40rem;margin-left:0}}.nav--active{margin-left:0;position:fixed;top:0;left:0;bottom:0;z-index:98}.nav--active::after{content:"";position:absolute;top:0;left:100%;width:999rem;height:999rem;background-color:rgba(0,0,0,.7)}@media(min-width: 1024px){.nav--active::after{content:none}}@media(min-width: 1024px){.nav--active{margin-left:-40rem}}.nav--active .nav__toggle{right:0;border-radius:0;background-image:url("./images/icons/icon-x.svg")}@media(min-width: 1024px){.nav--active .nav__toggle{background-image:url("./images/icons/icon-menu-2.svg");right:-5rem;border-radius:0 1rem 1rem 0}}.nav__toggle{width:5rem;height:5rem;background:center center/60% no-repeat var(--accent-dark);background-image:url("./images/icons/icon-menu-2.svg");position:absolute;display:flex;justify-content:center;align-items:center;top:.5rem;right:-5rem;cursor:pointer;z-index:99;border-radius:0 1rem 1rem 0}@media(min-width: 1024px){.nav__toggle{background-image:url("./images/icons/icon-x.svg")}}.navbar{padding:0 2rem 0 6rem;margin:0;background-color:var(--bg-light);list-style:none;display:flex;justify-content:flex-start;box-shadow:.5rem 1rem 1rem var(--bg-light);z-index:5;position:relative}.navbar__item{width:4rem;height:4rem;margin:.5rem;position:relative;display:none}.navbar__item--cards{display:block}@media(min-width: 480px){.navbar__item{display:block}.navbar__item[data-id=rock],.navbar__item[data-id=water]{display:none}}@media(min-width: 600px){.navbar__item[data-id=rock],.navbar__item[data-id=water]{display:block}}@media(min-width: 1280px){.navbar__item{margin-inline:.8rem}}.navbar__item::after{content:"";background-color:rgba(255,255,255,.25);width:100%;height:100%;display:block}.navbar__item--cards{margin-right:auto}.navbar__label{position:absolute;left:50%;transform:translateX(-50%);font-size:1.2rem;font-weight:700;z-index:5;height:1.5rem;width:100%;text-align:center}.navbar__label--cards{background-color:var(--accent-dark);color:var(--color-light);top:-0.7rem;line-height:1.5rem;border-radius:3px}.navbar__label--percentage{color:var(--accent-light);border-top:2px solid var(--accent-light);background-color:var(--color-light);bottom:-0.7rem;line-height:1.2;letter-spacing:-1px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
