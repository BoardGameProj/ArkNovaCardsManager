/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-0.25em}sup{top:-0.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}button,[type=button],[type=reset],[type=submit]{-webkit-appearance:button}button::-moz-focus-inner,[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner{border-style:none;padding:0}button:-moz-focusring,[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}:root{--accent-dark: #3f6212;--accent-medium: #4d7c0f;--accent-light: #65a30d;--bg-error: #fecaca;--bg-light: #f3f4f6;--card-animal: #fb923c;--card-sponsor: #558BAF;--card-margin: 0.5rem;--card-off: #888;--card-on: #65a30d;--card-width: 13rem;--color-error: #b91c1c;--color-light: #f1f5f9;--color-white: #fff;--color-black: #222;--color-primary-light: #e5e7eb;--color-primary-medium: #d1d5db;--color-primary-dark: #9ca3af;--color-overlay: rgba(#222, 0.5)}[data-scheme=light]{--bg-dark: #f5f5f5;--bg-light: #E0E0E0;--border-light: #E0E0E0;--border-dark: #f5f5f5;--text-dark: #eee;--text-light: #313131;--text-label: #313131;--scroll-dark: #d4d4d4;--scroll-light: #f5f5f5}[data-scheme=dark]{--bg-dark: #212121;--bg-light: #313131;--border-light: #313131;--border-dark: #212121;--text-dark: #212121;--text-light: #f5f5f5;--text-label: #444;--scroll-dark: #111;--scroll-light: #313131}*,*:before,*:after{box-sizing:inherit}html{font-size:62.5%}html,body{max-width:100%;min-height:100vh;min-height:-webkit-fill-available}html{box-sizing:border-box;height:-webkit-fill-available}body{font:400 1.5rem/1.2 "Rajdhani",Tahoma,Verdana,sans-serif;min-height:100vh;min-height:-webkit-fill-available;overflow-x:hidden;scrollbar-color:var(--scroll-dark) var(--scroll-light);scrollbar-width:1rem}::-webkit-scrollbar{width:1rem}::-webkit-scrollbar-track{background:var(--scroll-light)}::-webkit-scrollbar-thumb{background-color:var(--scroll-dark)}._no-scroll{overflow-y:hidden}.button{background-color:var(--accent-light);border:0;border:2px solid var(--accent-medium);color:var(--accent-dark);cursor:pointer;display:flex;flex:0 0 calc(50% - .5rem);font-size:1.5rem;font-weight:600;justify-content:center;align-items:center;padding:1rem;transition:all .25s linear}.button:hover{text-decoration:underline}.button--extension{margin:1rem 2rem 1rem 3rem;width:calc(100% - 5rem);border-width:1px;font-weight:500}@media(hover: hover)and (pointer: fine){.button--extension{display:flex}}.button__icon{margin-right:1rem}.card{aspect-ratio:.7;background-color:var(--bg-light);border-radius:1rem;cursor:pointer;flex:1 1 var(--card-width);height:auto;margin:var(--card-margin);max-width:var(--card-width);overflow:hidden;position:relative;transition:all .1s ease-in-out}.card--animal{border:2px solid var(--card-animal)}.card--animal .card__id{background-color:var(--card-animal);bottom:34%}.card--sponsor{border:2px solid var(--card-sponsor)}.card--sponsor .card__id{background-color:var(--card-sponsor);bottom:38%}@media(hover: hover)and (pointer: fine){.card:hover{transform:scale(1.05)}}@media(min-width: 480px){.card{--card-width: 20rem;--card-margin: 0.8rem}}@media(min-width: 768px){.card{--card-width: 19rem}}@media(min-width: 1024px){.card{--card-width: 17rem}}@media(min-width: 1280px){.card{--card-width: 19rem}}.card__image{height:100%;-o-object-fit:cover;object-fit:cover;width:100%}.card--on,.card--off{position:relative}.card--on::after,.card--off::after{background-position:center center;background-repeat:no-repeat;background-size:70% 70%;border-radius:.5rem;bottom:.2rem;content:none;display:block;height:3rem;left:.2rem;position:absolute;width:3rem}.card--on .card__image,.card--off .card__image{opacity:.5}.card--on{border-color:var(--card-on)}.card--on::after{background-color:var(--card-on);background-image:url("./images/icons/check.svg");content:""}.card--on .card__image{filter:grayscale(100%) brightness(75%) sepia(200%) hue-rotate(50deg) saturate(200%)}.card--on .card__id{background-color:var(--card-on)}.card--off{border-color:var(--card-off)}.card--off::after{background-color:var(--card-off);background-image:url("./images/icons/ban.svg");content:""}.card--off .card__image{filter:grayscale(100%)}.card--off .card__id{background-color:var(--card-off)}.card__id{color:var(--text-dark);display:inline-flex;font-size:1.3rem;font-weight:600;padding:.3rem .5rem;position:absolute;right:0}.container{display:flex;max-width:100%;min-height:100vh}.container__outer{z-index:100}._sidebar .container__outer--sidebar{z-index:199}.container__outer--sidebar{background-color:var(--accent-light);flex:0 0 32rem;height:100vh;left:0;margin-left:-32rem;max-width:32rem;position:fixed;top:0;width:100%}@media(min-width: 480px){.container__outer--sidebar{flex:0 0 45rem;margin-left:-45rem;max-width:45rem}}@media(min-width: 1280px){.container__outer--sidebar{margin-left:0;position:sticky}}._sidebar .container__outer--sidebar{margin-left:0}@media(min-width: 1280px){._sidebar .container__outer--sidebar{margin-left:-45rem;position:relative}}.container__outer--content{flex:1 1 100%;max-width:100%;z-index:99}.container__inner{min-height:auto;position:sticky;top:0}.container__inner--sidebar{display:flex;flex-direction:column;height:100vh;overflow-y:auto}.content{flex:1;height:100%;background-color:var(--bg-dark)}.content__area{display:flex;flex-wrap:wrap;justify-content:center;min-height:calc(100vh - 7rem);overflow-y:auto;padding:0 1rem;width:100%}.content__message{background-color:var(--bg-light);color:var(--text-light);margin:0;padding:1rem 3rem}.content__message strong{font-weight:600}.content__cards{align-content:flex-start;display:flex;flex-wrap:wrap;flex:0 0 100%;justify-content:center;padding:2rem 0;transition:all linear 3s}@media(min-width: 768px){.content__cards{padding-bottom:8rem}}.content__animals,.content__sponsors{align-content:flex-start;border:1px dashed var(--border-light);display:flex;flex-wrap:wrap;flex:0 0 100%;justify-content:center;margin:1rem;padding:2rem 0}.content__animals:empty,.content__sponsors:empty{display:none}.content__sponsors{margin-top:0}.content__stats{align-self:flex-start;display:flex;flex-wrap:wrap;flex:0 0 17rem;height:auto;max-width:17rem}.dialog{background-color:var(--bg-dark)}.dialog strong{font-weight:600;letter-spacing:1px}.dialog--offcanvas{border:0;height:100%;margin:0;margin-left:auto;max-width:40rem;min-height:100vh;padding:0;width:80%}.dialog--modal{width:90vw;max-width:100rem;bottom:0;color:var(--text-light);margin-left:auto;margin-right:auto;border:5px solid var(--bg-light)}.dialog__list{list-style:none;margin:0;padding:0;border-left:5px solid var(--bg-light);color:var(--text-light)}.dialog__item{background:no-repeat 1.5rem center rgba(0,0,0,0);border-bottom:1px solid var(--bg-light);cursor:pointer;padding:1rem 2rem;display:flex}@media(hover: hover)and (pointer: fine){.dialog__item:hover{background-color:var(--bg-light)}}.dialog--action .dialog__item--marine{position:relative}.dialog--action .dialog__item--marine::after{content:"海洋世界扩展";position:absolute;top:.2rem;right:.2rem;background-color:var(--bg-light);font-size:1rem;text-transform:uppercase;padding:.5rem 1rem;font-weight:600}.dialog--action .dialog__item--marine:hover::after{background-color:var(--bg-dark)}.dialog--sort .dialog__item{font-size:1.6rem;font-weight:400;padding:1.5rem;align-items:center}.dialog--action .dialog__item{font-size:1.4rem;font-weight:400;padding:1.8rem 2.5rem;position:relative;flex-direction:column;align-items:flex-start}.dialog--action .dialog__item::before{content:attr(data-value-name);display:block;font-size:1.6rem;font-weight:600;margin-bottom:.2rem;text-transform:uppercase}.dialog__icon{margin-right:1.5rem}.dialog__link{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}.dialog__link,.dialog__link:visited,.dialog__link:hover,.dialog__link:focus{color:var(--accent-light);outline:none}.dialog::backdrop{background-color:rgba(34,34,34,.8);cursor:pointer}.dialog__info-link{text-decoration:underline}.dialog__ext-image{width:100%;max-width:70rem;display:block;margin:0 auto;opacity:.75;transition:opacity .2s linear}.dialog__ext-image:hover{opacity:1}.filter--sidebar{flex:1 0 auto;padding:2rem;padding-left:3rem}.filter--sidebar .filter__item{flex:0 0 calc(16.66% - 1rem);margin:.5rem;margin-bottom:1.5rem}.filter__category{border:2px solid var(--accent-medium);display:flex;flex-wrap:wrap;margin:0;margin-bottom:1rem;padding:1.5rem 1rem;position:relative}@media(max-width: 479px){.filter__category--extras .filter__item{margin-bottom:0}.filter__category--extras .filter__stat{display:none}}.filter__type{color:var(--accent-dark);font-size:1.3rem;font-weight:600;left:-0.1rem;padding:.2rem 0;position:absolute;text-align:center;text-transform:uppercase;top:50%;transform:rotate(90deg) translateX(-50%);transform-origin:0 0}.filter__item{aspect-ratio:1;display:block;position:relative}@media(hover: hover)and (pointer: fine){.filter__item:hover{cursor:pointer}.filter__item:hover .filter__label{filter:grayscale(0);opacity:1}}@media(hover: hover)and (pointer: fine){.filter__item[data-tooltip]:hover::after{background-color:var(--color-black);color:var(--color-white);content:attr(data-tooltip);font-size:1.4rem;font-weight:600;left:50%;min-width:100%;padding:.3rem .5rem .2rem;position:absolute;text-align:center;text-transform:uppercase;top:90%;transform:translateX(-50%);white-space:nowrap;z-index:20}}@media(min-width: 1024px){.filter__item{margin-bottom:2rem}}@media(min-width: 1024px){.filter__item--no-label{margin-bottom:.7rem}}.filter__checkbox{height:0;position:absolute;visibility:hidden;width:0}.filter__checkbox:checked+.filter__label{filter:grayscale(0);opacity:1}.filter__checkbox:checked+.filter__label::before{border-color:var(--accent-dark)}.filter__checkbox:checked+.filter__label::after{background-color:var(--accent-dark);content:"";height:.9rem;position:absolute;right:.1rem;top:.3rem;width:.9rem}.filter__label{display:block;filter:grayscale(100%);height:100%;opacity:.5;transition:all .25s linear;width:100%;z-index:99}.filter__label::before{background-color:var(--color-white);border:2px solid var(--accent-dark);content:"";height:1.7rem;position:absolute;right:-0.3rem;top:-0.1rem;width:1.7rem}.filter__label--hide .filter__text{display:none}.filter__stat{background-color:var(--color-white);color:var(--color-black);font-size:1.5rem;font-weight:600;left:50%;padding:.2rem .5rem .1rem;position:absolute;top:90%;transform:translateX(-50%);white-space:nowrap}@media(min-width: 1024px){.filter__stat{display:block}}.filter__buttons{display:flex;flex-wrap:wrap;gap:1rem}.header{padding:2rem 2rem 1rem 3rem;position:relative}.header__link{display:inline-block;text-decoration:none;font-size:2rem;color:var(--color-white);border:0;padding:0.5rem 1rem 0.5rem 1rem;font-weight:600;background-color:var(--accent-dark);box-shadow:inset 0 0 0 1px var(--accent-light)}.header__link span{display:inline-block;margin:-0.5rem -1rem -0.5rem 1rem;padding:0.5rem 1rem 0.5rem 1rem;position:relative;color:var(--color-white);box-shadow:inset 0 0 0 1px var(--accent-light);background-color:var(--accent-medium)}.header__link span::before{content:"";width:0.8rem;height:0.8rem;background-color:var(--accent-light);position:absolute;left:0;transform:translateX(-50%);border-radius:50%;bottom:1rem}.header__link span::before{transition:all .2s linear}.header__link:hover span::before{background-color:var(--color-white)}.header__close{background:url("./images/icons/x--light.svg") center center/3rem no-repeat rgba(0,0,0,0);border:1px solid var(--accent-medium);cursor:pointer;height:3.6rem;position:absolute;right:2rem;top:2rem;transition:all .25s linear;width:4.6rem}@media(hover: hover)and (pointer: fine){.header__close:hover{border-color:var(--accent-dark)}}.icon{background:url("./images/general/sprites.webp") no-repeat;background-position-x:0;background-size:100% 3100%;border-radius:50%}.icon--marine{background-position-y:0%}.icon--animal{background-position-y:10.02%}.icon--sponsor{background-position-y:3.34%}.icon--area_1{background-position-y:20.04%}.icon--area_2{background-position-y:16.7%}.icon--area_3{background-position-y:23.38%}.icon--area_5{background-position-y:30.06%}.icon--area_4{background-position-y:26.72%}.icon--type_1{background-position-y:33.4%}.icon--type_3{background-position-y:36.74%}.icon--type_2{background-position-y:40.08%}.icon--type_4{background-position-y:43.42%}.icon--type_5{background-position-y:46.76%}.icon--type_6{background-position-y:96.86%}.icon--bear{background-position-y:80.16%}.icon--pet{background-position-y:76.82%}.icon--size_1{background-position-y:56.78%}.icon--size_2{background-position-y:63.46%}.icon--size_3{background-position-y:60.12%}.icon--size_4{background-position-y:53.44%}.icon--size_5{background-position-y:50.1%}.icon--small{background-position-y:70.14%}.icon--aviary{background-position-y:73.48%}.icon--terrarium{background-position-y:66.8%}.icon--aquarium{background-position-y:100.2%}.icon--rock{background-position-y:83.5%}.icon--water{background-position-y:86.84%}.icon--conservation{background-position-y:90.18%}.icon--reputation{background-position-y:93.52%}.icon--science{background-position-y:13.36%}.info--footer{background-color:var(--accent-medium);overflow:hidden}.info__icon{margin-right:1rem}.info__about{color:var(--color-white);font-size:1.2rem;padding:1rem;padding-bottom:0;display:flex;justify-content:center;text-align:center}.info__list{display:flex;justify-content:center;list-style:none;margin:0;margin-top:auto;padding:1rem}.info__item:not(:last-child){border-right:1px solid var(--accent-light)}.info__item--homepage{display:none}@media(min-width: 480px){.info__item--homepage{display:block}}.info__link{background:1rem center/2rem no-repeat var(--accent-medium);color:var(--color-white);display:flex;font-size:1.5rem;font-weight:500;justify-content:center;margin:-1rem 0;padding:1rem;padding-left:3.6rem;text-decoration:none}@media(hover: hover)and (pointer: fine){.info__link:hover{text-decoration:underline;text-decoration-color:var(--accent-light);text-underline-offset:.3rem}}.info__link--github{background-image:url("./images/icons/brand-github.svg")}.info__link--home{background-image:url("./images/icons/world-www.svg")}.info__link--code{background-image:url("./images/icons/code.svg")}.info__text{color:var(--color-white);padding:1rem}.overlay{background-color:rgba(34,34,34,.8);cursor:pointer;display:none;height:100%;left:0;position:fixed;top:0;width:100%;z-index:100}._sidebar .overlay{display:block}@media(min-width: 1280px){._sidebar .overlay{display:none}}.scroll{background:url("./images/icons/chevron-up.svg") no-repeat center center/2.5rem var(--accent-dark);bottom:0;cursor:pointer;height:4rem;margin:1rem;opacity:.8;position:fixed;right:0;transition:opacity .25s linear;width:4rem;z-index:99}@media(hover: hover)and (pointer: fine){.scroll:hover{opacity:1}}.topbar{align-items:center;background-color:var(--bg-light);display:flex;font-size:1.5rem;font-weight:600;justify-content:flex-end;padding:.8rem 1.6rem .8rem 5.6rem;position:sticky;top:0;z-index:99}@media(min-width: 370px){.topbar{justify-content:center}}@media(min-width: 1280px){.topbar{padding-left:1.6rem}._sidebar .topbar{padding-left:5.6rem}}.topbar__menu{background:url("./images/icons/adjustments.svg") center center/2.5rem no-repeat var(--accent-light);border-radius:0 1rem 1rem 0;cursor:pointer;height:4rem;left:0;position:absolute;top:1.3rem;width:4rem}@media(min-width: 1280px){.topbar__menu{display:none}._sidebar .topbar__menu{display:block}}.topbar__form{display:flex;overflow-x:auto;overscroll-behavior-inline:contain}.topbar__section{display:flex;padding:2.1rem .5rem .7rem .5rem;position:relative}@media(min-width: 480px){.topbar__section{padding-inline:1rem}}.topbar__item{display:flex;height:3rem;margin-inline:.5rem;position:relative}.topbar__item::before{bottom:100%;color:var(--accent-light);content:attr(data-label);font-size:1.3rem;font-weight:500;margin-bottom:.2rem;overflow:hidden;position:absolute;white-space:nowrap}.topbar__item--action{width:20rem}@media(min-width: 1440px){.topbar__item--action{width:23rem}}.topbar__item--action .topbar__input{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%}.topbar__item--action .topbar__input:-moz-placeholder+.topbar__reset{display:none}.topbar__item--action .topbar__input:placeholder-shown+.topbar__reset{display:none}.topbar__item--cards{width:8rem}.topbar__icon{width:1.8rem;stroke:var(--text-light)}.topbar__input{border:0;color:var(--text-light);cursor:pointer;font-size:1.5rem;font-weight:500;height:100%;margin:0;outline:none;padding:0 1rem;background-color:var(--bg-dark)}.topbar__input::-moz-placeholder{color:var(--text-light);font-size:1.5rem;font-weight:500}.topbar__input::placeholder{color:var(--text-light);font-size:1.5rem;font-weight:500}.topbar__reset{background:center center/1.6rem no-repeat var(--bg-dark);border-left:1px solid var(--border-light);cursor:pointer;height:3rem;position:absolute;right:0;top:0;width:3rem}[data-scheme=light] .topbar__reset{background-image:url("./images/icons/x--light.svg")}[data-scheme=dark] .topbar__reset{background-image:url("./images/icons/x--dark.svg")}.topbar__checkbox{height:0;width:0}.topbar__label{align-items:center;color:var(--color-black);cursor:pointer;display:flex;font-size:1.5rem;font-weight:500;justify-content:center;position:relative;width:6.5rem;background-color:var(--bg-dark)}@media(min-width: 480px){.topbar__label{width:8rem}}@media(min-width: 1024px){.topbar__label{width:10rem}}.topbar__label--option{border-radius:0;filter:grayscale(1);opacity:.25;position:relative;width:100%}.topbar__label--option::after{content:"";position:absolute;top:0;left:4rem;width:1px;height:100%;background-color:var(--border-light)}.checkbox:checked+.topbar__label--option{filter:grayscale(0);opacity:1}.topbar__label--option .topbar__icon{margin-inline:1.2rem}.topbar__label--action,.topbar__label--sort{width:4rem;border-right:1px solid var(--border-light)}._sidebar .topbar__label--action,._sidebar .topbar__label--sort{width:4rem}.topbar__value{flex:1;color:var(--text-light);text-align:center}.topbar__scheme{border:0;cursor:pointer;height:3rem;line-height:1;background-color:var(--bg-dark)}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
